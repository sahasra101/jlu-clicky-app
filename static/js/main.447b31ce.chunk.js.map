{"version":3,"sources":["components/NavBar/index.js","components/FriendCard/index.js","components/Wrapper/index.js","components/Title/index.js","App.js","index.js"],"names":["NavBar","props","className","navMiddleMessage","id","currentScore","topScore","ImageCard","onClick","shuffleImages","alt","name","src","image","Wrapper","children","Title","App","state","jluimages","clicked","shuffle","array","i","length","j","Math","floor","random","temp","event","target","setState","checkScore","setTopScore","clickedId","includes","push","this","map","img","key","class","Component","ReactDOM","render","document","getElementById"],"mappings":"kjFAeeA,MAVf,SAAgBC,GACd,OACE,yBAAKC,UAAU,yCACb,0BAAMA,UAAU,6BAAhB,qBACA,0BAAMA,UAAU,4CAA4CD,EAAME,kBAClE,0BAAMD,UAAU,gDAAgDE,GAAG,gBAAnE,eAA+FH,EAAMI,aAArG,iBAAiIJ,EAAMK,Y,MCE9HC,MATf,SAAmBN,GACjB,OACE,yBAAKC,UAAU,QACb,yBAAKM,QAASP,EAAMQ,cAAeL,GAAIH,EAAMG,GAAIF,UAAU,iBACzD,yBAAKE,GAAIH,EAAMG,GAAIM,IAAKT,EAAMU,KAAMC,IAAKX,EAAMY,W,MCAxCC,MAJf,SAAiBb,GACf,OAAO,yBAAKC,UAAU,WAAWD,EAAMc,W,MCG1BC,MAJf,SAAef,GACb,OAAO,wBAAIC,UAAU,SAASD,EAAMc,W,OCmGvBE,E,2MA9FbC,MAAQ,CACNC,UAAWA,EACXd,aAAc,EACdC,SAAU,EACVH,iBAAkB,2BAClBiB,QAAS,I,EAGXC,QAAU,SAAAC,GAER,IADA,IAAIC,EAAID,EAAME,OAAS,EAChBD,EAAI,EAAGA,IAAK,CACjB,IAAME,EAAIC,KAAKC,MAAMD,KAAKE,UAAYL,EAAI,IACpCM,EAAOP,EAAMC,GACnBD,EAAMC,GAAKD,EAAMG,GACjBH,EAAMG,GAAKI,EAEb,OAAOP,G,EAGTb,cAAgB,SAAAqB,GACd,IAAIX,EAAY,EAAKE,QAAQ,EAAKH,MAAMC,WACpCf,EAAK0B,EAAMC,OAAO3B,GACtB,EAAK4B,SAAS,CAAEb,aAChB,EAAKc,WAAW7B,K,EAGlB8B,YAAc,WACR,EAAKhB,MAAMb,aAAe,EAAKa,MAAMZ,UACvC,EAAK0B,SAAS,CAAC1B,SAAU,EAAKY,MAAMb,gB,EAIxC4B,WAAa,SAAAE,GACQ,EAAKjB,MAAME,QAEbgB,SAASD,GACtB,EAAKH,SAAS,CACZ3B,aAAc,EACde,QAAS,GACTjB,iBAAkB,uBAItB,EAAKe,MAAME,QAAQiB,KAAKF,GACxB,EAAKH,SAAS,CACZ7B,iBAAkB,0BAClBiB,QAAS,EAAKF,MAAME,QACpBf,aAAc,EAAKa,MAAMb,aAAe,IACvC,WACHiC,KAAKJ,kBAI2B,KAA9B,EAAKhB,MAAME,QAAQI,QACrB,EAAKQ,SAAS,CACZ7B,iBAAkB,gCAClBiB,QAAS,GACTf,aAAc,EACdC,SAAU,M,wEAMN,IAAD,OACP,OACE,6BACE,kBAAC,EAAD,CACED,aAAciC,KAAKpB,MAAMb,aACzBC,SAAUgC,KAAKpB,MAAMZ,SACrBH,iBAAkBmC,KAAKpB,MAAMf,mBAE/B,kBAAC,EAAD,KACE,kBAAC,EAAD,+BACF,6BACI,wEACA,+DAEDmC,KAAKpB,MAAMC,UAAUoB,KAAI,SAAAC,GAAG,OAC3B,kBAAC,EAAD,CACE/B,cAAe,EAAKA,cACpBL,GAAIoC,EAAIpC,GACRqC,IAAKD,EAAIpC,GACTO,KAAM6B,EAAI7B,KACVE,MAAO2B,EAAI3B,YAIjB,4BAAQ6B,MAAM,gB,GA1FJC,a,MCFlBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.447b31ce.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./style.css\";\r\n\r\n\r\n\r\nfunction NavBar(props) {\r\n  return (\r\n    <nav className=\"navbar navbar-light fixed-top bg-dark\">\r\n      <span className=\"navbar mb-0 h2 text-light\">React Clicky Game</span>\r\n      <span className=\"nav-item navbar-text mb-0 h3 text-danger\">{props.navMiddleMessage}</span>\r\n      <span className=\"nav-item navbar-text score mb-0 h2 text-light\" id=\"currentScore\">Your Score: {props.currentScore} | Top Score: {props.topScore}</span>\r\n    </nav>\r\n  );\r\n}\r\n\r\nexport default NavBar;","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nfunction ImageCard(props) {\r\n  return (\r\n    <div className=\"card\">\r\n      <div onClick={props.shuffleImages} id={props.id} className=\"img-container\">\r\n        <img id={props.id} alt={props.name} src={props.image} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default ImageCard;","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nfunction Wrapper(props) {\r\n  return <div className=\"wrapper\">{props.children}</div>;\r\n}\r\n\r\nexport default Wrapper;\r\n","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nfunction Title(props) {\r\n  return <h1 className=\"title\">{props.children}</h1>;\r\n}\r\n\r\nexport default Title;\r\n","import React, { Component } from \"react\";\r\nimport NavBar from \"./components/NavBar\";\r\nimport ImageCard from \"./components/FriendCard\";\r\nimport Wrapper from \"./components/Wrapper\";\r\nimport Title from \"./components/Title\";\r\nimport jluimages from \"./jluimages.json\";\r\n\r\nclass App extends Component {\r\n  // Setting this.state.friends to the friends json array\r\n  state = {\r\n    jluimages: jluimages,\r\n    currentScore: 0,\r\n    topScore: 0,\r\n    navMiddleMessage: \"Click An Image To Begin!\",\r\n    clicked: []\r\n  };\r\n\r\n  shuffle = array => {\r\n    let i = array.length - 1;\r\n    for (; i > 0; i--) {\r\n      const j = Math.floor(Math.random() * (i + 1));\r\n      const temp = array[i];\r\n      array[i] = array[j];\r\n      array[j] = temp;\r\n    }\r\n    return array;\r\n  }\r\n\r\n  shuffleImages = event => {\r\n    let jluimages = this.shuffle(this.state.jluimages);\r\n    let id = event.target.id;\r\n    this.setState({ jluimages }, \r\n    this.checkScore(id));\r\n  }\r\n \r\n  setTopScore = () => {\r\n    if (this.state.currentScore > this.state.topScore) {\r\n      this.setState({topScore: this.state.currentScore});\r\n    }\r\n  }\r\n\r\n  checkScore = clickedId => {\r\n    let clickedArray = this.state.clicked;\r\n    \r\n    if (clickedArray.includes(clickedId)) {\r\n        this.setState({\r\n          currentScore: 0,\r\n          clicked: [],\r\n          navMiddleMessage: \"Please try again!\"\r\n        })\r\n      }\r\n     else {\r\n      this.state.clicked.push(clickedId);\r\n      this.setState({\r\n        navMiddleMessage: \"You Guessed Correctly!!\",\r\n        clicked: this.state.clicked,\r\n        currentScore: this.state.currentScore + 1\r\n      }, function() {\r\n      this.setTopScore();\r\n      });\r\n    }\r\n\r\n    if (this.state.clicked.length === 12) {\r\n      this.setState({\r\n        navMiddleMessage: \"Congrads You Win! Play again!\",\r\n        clicked: [],\r\n        currentScore: 0,\r\n        topScore: 12\r\n      });\r\n    }\r\n  }\r\n\r\n  // Map over this.state.jluimages and render a ImageCard component for each JSON object\r\n  render() {\r\n    return (\r\n      <div>\r\n        <NavBar\r\n          currentScore={this.state.currentScore}\r\n          topScore={this.state.topScore}\r\n          navMiddleMessage={this.state.navMiddleMessage}\r\n        />\r\n        <Wrapper>\r\n          <Title>Superfriends Image Game\r\n        <br />\r\n            <h5>Get 1 Point for Clicking Each Image Once</h5>\r\n            <h5>Avoid Clicking Any Image Twice</h5>\r\n          </Title>\r\n          {this.state.jluimages.map(img => (\r\n            <ImageCard\r\n              shuffleImages={this.shuffleImages}\r\n              id={img.id}\r\n              key={img.id}\r\n              name={img.name}\r\n              image={img.image}\r\n            />\r\n          ))}\r\n        </Wrapper>\r\n        <footer class=\"footer\"/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport \"./index.css\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}